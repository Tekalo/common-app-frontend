name: Storybook - Build and Deploy
on:
  pull_request_target:
    types: [opened, edited, synchronize]
    branches: [develop]
    paths: ['src/modules/**/*']

jobs:
  build-and-deploy:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.19.1]

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0 # 👈 Required to retrieve git history

      - name: ⚒️ Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: ⚙️ Install pnpm
        run: npm install -g pnpm

      - name: 🗃️ Cache
        uses: actions/cache@6998d139ddd3e68c71e9e398d8e40b71a2f39812 # v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ~/.pnpm-store
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: 🔧 Install and Build
        run: | # Install npm packages and build the Storybook files
          pnpm install
          pnpm build-storybook

      - name: 🚀 Deploy
        uses: chromaui/action@v1
        with:
          exitOnceUploaded: true
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
