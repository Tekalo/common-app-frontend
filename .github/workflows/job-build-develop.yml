---
name: Job - Build Project for Develop

on:
  workflow_call:
    inputs:
      environment:
        description: environment name
        type: string
        required: true
    secrets:
      CLOUDFLARE_ACCOUNT_ID:
        description: Cloudflare Account ID
        required: true
      CLOUDFLARE_API_TOKEN:
        description: Cloudflare API Token
        required: true
      NEXT_PUBLIC_IMAGE_OPTIMIZATION_ENV:
        description: Image Optimization Environment
        required: false
      SENTRY_AUTH_TOKEN:
        description: Sentry Auth Token
        required: true
    outputs:
      url:
        value: ${{ jobs.build.outputs.url }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    strategy:
      matrix:
        node-version: [20.11.1]

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Restore cache
        id: pnpm-next-restore
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ~/.cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Install dependencies and Build (regular)

        env:
          CI: true
          NEXT_PUBLIC_IMAGE_OPTIMIZATION_ENV: ${{ secrets.NEXT_PUBLIC_IMAGE_OPTIMIZATION_ENV }}
          NEXT_PUBLIC_ENVIRONMENT: ${{ vars.environment }}
          NEXT_PUBLIC_AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
          NEXT_PUBLIC_AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
          NEXT_PUBLIC_AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
          NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_TEST_USER: ${{vars.NEXT_PUBLIC_TEST_USER}}
          NEXT_PUBLIC_TEST_PASSWORD: ${{secrets.NEXT_PUBLIC_TEST_PASSWORD}}
          NEXT_PUBLIC_SENTRY_DSN: ${{ vars.SENTRY_DSN }}
          NEXT_PUBLIC_TURNSTILE_SITEKEY: ${{vars.TURNSTILE_SITEKEY }}
          CF_ACCESS_CLIENT_ID: ${{ vars.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
          NEXT_TELEMETRY_DISABLED: 1
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_RELEASE: ${{ github.sha }}
          SENTRY_ENVIRONMENT: ${{ vars.environment }}

        run: |
          pnpm install
          pnpm build:for-edge

      - name: Publish to Cloudflare Pages
        id: deploy
        uses: cloudflare/wrangler-action@6d58852c35a27e6034745c5d0bc373d739014f7f #v3.13.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy .vercel/output/static --project-name=common-app-frontend
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          packageManager: pnpm
    outputs:
      issue-number: ${{ github.event.pull_request.number }}
      url: ${{ steps.deploy.outputs.deployment-url }}
      alias: ${{ steps.deploy.outputs.pages-deployment-alias-url }}
      environment: ${{ inputs.environment }}
