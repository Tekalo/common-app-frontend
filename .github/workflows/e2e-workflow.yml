---
name: Run E2E Tests

on:
  workflow_call:
    inputs:
      environment:
        description: environment name
        type: string
        required: true
    secrets:
      NEXT_PUBLIC_TEST_PASSWORD:
        description: e2e test user pwd
        required: true
      CF_ACCESS_CLIENT_SECRET:
        description: cloudflare access secret
        required: true
      E2E_TURNSTILE_SECRET:
        description: secret to disable turnstile during e2e tests
        required: true
        # TODO: Make these not required
      E2E_CERT:
        required: true
      E2E_CERT_KEY:
        required: true

jobs:
  e2e-tests:
    name: Run e2e Tests
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    strategy:
      matrix:
        node-version: [16.19.1]

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Restore cache
        id: pnpm-next-restore
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ~/.cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      # - name: Add hosts to /etc/hosts
      #   if: $${{inputs.environment == 'production'}}
      #   run: |
      #     sudo echo "127.0.0.1 prod.common-app-frontend.pages.dev" | sudo tee -a /etc/hosts

      - name: Make certs dir
        run: |
          mkdir cypress/certs

      - name: Make cert
        run: |
          echo "${{ secrets.E2E_CERT }}" >> cypress/certs/e2e.pem

      - name: Make cert key
        run: |
          echo "${{ secrets.E2E_CERT_KEY }}" >> cypress/certs/e2e-key.pem

      - name: Set cert dir
        run: |
          sed -i 's=##CERT##=${{ github.workspace }}/cypress/certs/e2e.pem=g' ${{ github.workspace }}/cypress/conf/nginx.conf

      - name: Set cert key dir
        run: |
          sed -i 's=##CERT_KEY##=${{ github.workspace }}/cypress/certs/e2e-key.pem=g' ${{ github.workspace }}/cypress/conf/nginx.conf

      - name: Set e2e url
        run: |
          sed -i 's=##E2E_URL##=${{ vars.E2E_BASE_URL}}=g' ${{ github.workspace }}/cypress/conf/nginx.conf
          cat cypress/conf/nginx.conf

      # - name: Set nginx config
      #   run: |
      #     sudo nginx -t -c ${{ github.workspace }}/cypress/conf/nginx.conf

      # - name: Start nginx
      #   run: |
      #     sudo systemctl start nginx

      # - name: Run local proxy
      #   run: |
      #     pnpm local-proxy

      - name: Install Dependencies
        run: pnpm install

      - name: Disable TLS
        run: export NODE_TLS_REJECT_UNAUTHORIZED=1

      - name: Cypress run

        env:
          CI: true
          NEXT_PUBLIC_ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          CF_PAGES_BRANCH: ${{ vars.E2E_PAGES_BRANCH }}
          NEXT_PUBLIC_AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
          NEXT_PUBLIC_AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
          NEXT_PUBLIC_AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
          NEXT_PUBLIC_TURNSTILE_SITEKEY: ${{ vars.E2E_TURNSTILE_KEY }}
          TURNSTILE_SECRET: ${{ secrets.E2E_TURNSTILE_SECRET }}
          NEXT_PUBLIC_TEST_USER: ${{ vars.NEXT_PUBLIC_TEST_USER }}
          NEXT_PUBLIC_TEST_PASSWORD: ${{ secrets.NEXT_PUBLIC_TEST_PASSWORD }}
          NEXT_PUBLIC_BASE_URL: ${{ vars.E2E_BASE_URL }}
          CF_ACCESS_CLIENT_ID: ${{ vars.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}

        uses: cypress-io/github-action@v5.7.2
        with:
          record: false
          build: pnpm build:for-edge
          start: pnpm local-proxy
          wait-on: ${{ vars.E2E_BASE_URL }}
          wait-on-timeout: 120
