name: Deploy main to Cloudflare Pages

# This workflow triggers when a push happens on on main
# Latest deployment: https://main.common-app-frontend.pages.dev/

on:
  push:
    branches:
      - main
      - test/pre-launch

  workflow_dispatch:

jobs:
  # This job is a quick sanity check to ensure that the build is working.
  # This can be expanded to include e2e testing later.
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: production

    strategy:
      matrix:
        node-version: [16.19.1]

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Install dependencies and Build (regular)

        env:
          CI: true
          NEXT_PUBLIC_ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          NEXT_PUBLIC_AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
          NEXT_PUBLIC_AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
          NEXT_PUBLIC_AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ vars.SENTRY_DSN }}
          NEXT_TELEMETRY_DISABLED: 1

        run: |
          pnpm install
          pnpm build:for-edge

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache/save@v3
        name: Setup build and dependency cache
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ github.workspace }}/.next/cache
            ${{ github.workspace }}/.vercel/output
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    needs: [build]

    strategy:
      matrix:
        node-version: [16.19.1]

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Restore cache
        id: pnpm-next-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ github.workspace }}/.next/cache
            ${{ github.workspace }}/.vercel/output
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}

      - if: steps.pnpm-next-restore.outputs.cache-hit != 'true'
        name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - if: steps.pnpm-next-restore.outputs.cache-hit != 'true'
        name: Install dependencies and Build (for Cloudflare Pages)

        env:
          CI: true
          NEXT_PUBLIC_ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          NEXT_PUBLIC_AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
          NEXT_PUBLIC_AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
          NEXT_PUBLIC_AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ vars.SENTRY_DSN }}
          NEXT_TELEMETRY_DISABLED: 1

        run: |
          pnpm install
          pnpm build:for-edge

      - name: Publish to Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@c2ad89679f0dee1ff4bcf9b8bbe1cf52d176cb29 # v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: common-app-frontend
          directory: .vercel/output/static
          # Optional: Enable this if you want to have GitHub Deployments triggered
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  e2e-tests:
    name: Run e2e Tests
    continue-on-error: true
    runs-on: ubuntu-latest
    environment: production

    strategy:
      matrix:
        node-version: [16.19.1]

    needs: [deploy]

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Restore cache
        id: pnpm-next-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ${{ github.workspace }}/.next/cache
            ${{ github.workspace }}/.vercel/output
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Cypress run

        env:
          CI: true
          NEXT_PUBLIC_ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          NEXT_PUBLIC_AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
          NEXT_PUBLIC_AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
          NEXT_PUBLIC_AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
          NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}
          CF_ACCESS_CLIENT_ID: ${{ vars.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}

        uses: cypress-io/github-action@v5.7.2
