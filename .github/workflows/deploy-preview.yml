name: Deploy preview to Cloudflare Pages

# This workflow is triggered on pull requests against the develop branch.
# This workflow is triggered on pushes to branches starting with test/

on:
  # Trigger the workflow on a push to a branch that starts with `test/`
  push:
    branches:
      - test/*
    branches-ignore:
      - test/pre-launch
    # OR #

  # Trigger the workflow on pull requests
  pull_request:
    # whenever a PR is opened, edited, or synchronized
    types: [opened, synchronize, reopened]
    # on develop
    branches:
      - develop

  workflow_dispatch:

jobs:
  # This job is a quick sanity check to ensure that the build is working.
  # This can be expanded to include e2e testing later.
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: develop

    strategy:
      matrix:
        node-version: [16.19.1]

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache
        uses: actions/cache@6998d139ddd3e68c71e9e398d8e40b71a2f39812 # v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ~/.pnpm-store
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies and Build (regular)

        env:
          CI: true
          NEXT_PUBLIC_ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          NEXT_PUBLIC_AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
          NEXT_PUBLIC_AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
          NEXT_PUBLIC_AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ vars.SENTRY_DSN }}
          NEXT_TELEMETRY_DISABLED: 1

        run: |
          pnpm install
          pnpm build:for-edge

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: develop

    needs: [build]

    strategy:
      matrix:
        node-version: [16.19.1]

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache
        uses: actions/cache@6998d139ddd3e68c71e9e398d8e40b71a2f39812 # v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ~/.pnpm-store
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies and Build (for Cloudflare Pages)

        env:
          CI: true
          NEXT_PUBLIC_ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          NEXT_PUBLIC_AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
          NEXT_PUBLIC_AUTH0_CLIENT_ID: ${{ vars.AUTH0_CLIENT_ID }}
          NEXT_PUBLIC_AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ vars.SENTRY_DSN }}
          NEXT_TELEMETRY_DISABLED: 1

        run: |
          pnpm install
          pnpm build:for-edge

      - name: Publish to Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@c2ad89679f0dee1ff4bcf9b8bbe1cf52d176cb29 # v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: common-app-frontend
          directory: .vercel/output/static
          # Optional: Enable this if you want to have GitHub Deployments triggered
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      issue-number: ${{ github.event.pull_request.number }}
      url: ${{ steps.deploy.outputs.url }}
      alias: ${{ steps.deploy.outputs.alias }}
      environment: ${{ steps.deploy.outputs.environment }}
      deployment_id: ${{ steps.deploy.outputs.id }}

  comment:
    name: Comment on PR
    uses: raisedadead/portfolio/.github/workflows/comment.yml@main
    needs: [deploy]
    with:
      issue-number: ${{ github.event.pull_request.number }}
      url: ${{ needs.deploy.outputs.url }}
      alias: ${{ needs.deploy.outputs.alias }}
      environment: ${{ needs.deploy.outputs.environment }}
      deployment_id: ${{ needs.deploy.outputs.deployment_id }}
